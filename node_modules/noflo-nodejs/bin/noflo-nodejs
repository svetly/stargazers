#!/usr/bin/env node
// vim: set filetype=javascript:
var http = require('http');
var lib = require('../index');
var runtime = require('noflo-runtime-websocket');
var flowhub = require('flowhub-registry');

var stored = lib.getStored();
var baseDir = process.env.PROJECT_HOME || process.cwd();
var interval = 10 * 60 * 1000;

if (Object.keys(stored).length === 0) {
  console.error('No configuration found at ' + lib.getStoredPath() + '. Please run noflo-nodejs-init first.');
  process.exit(1);
}

if (stored.host === 'autodetect') {
  stored.host = lib.discoverHost();
}

var flowhubRuntime = new flowhub.Runtime({
  label: stored.label,
  id: stored.id,
  user: stored.user,
  secret: stored.secret,
  protocol: 'websocket',
  address: 'ws://' + stored.host + ':' + stored.port,
  type: 'noflo-nodejs'
});

var server = http.createServer(function () {});
var rt = runtime(server, {
  baseDir: baseDir,
  captureOutput: false,
  catchExceptions: true
});

server.listen(stored.port, function () {
  console.log('NoFlo runtime listening at ws://' + stored.host + ':' + stored.port);
  console.log('Using ' + baseDir + ' for component loading');

  // Register the runtime with Flowhub so that it will show up in the UI
  flowhubRuntime.register(function (err, ok) {
    if (err) {
      console.log('Registration with Flowhub failed: ' + err.message);
      return;
    }

    console.log('Registered with Flowhub. The Runtime should now be accessible in the UI');

    // Ping Flowhub periodically to let the user know that the runtime is still available
    setInterval(function () {
      flowhubRuntime.ping();
    }, interval);

    // Start capturing output so that we can send it to the UI
    rt.startCapture();
  });
});
